const VERBS = [
  "Accept",
  "Accuse",
  "Achieve",
  "Acknowledge",
  "Acquire",
  "Adapt",
  "Add",
  "Adjust",
  "Admire",
  "Admit",
  "Adopt",
  "Adore",
  "Advise",
  "Afford",
  "Agree",
  "Aim",
  "Allow",
  "Announce",
  "Anticipate",
  "Apologize",
  "Appear",
  "Apply",
  "Appreciate",
  "Approach",
  "Approve",
  "Argue",
  "Arise",
  "Arrange",
  "Arrive",
  "Ask",
  "Assume",
  "Assure",
  "Astonish",
  "Attach",
  "Attempt",
  "Attend",
  "Attract",
  "Avoid",
  "Awake",
  "Bake",
  "Bathe",
  "Be",
  "Bear",
  "Beat",
  "Become",
  "Begin",
  "Behave",
  "Believe",
  "Belong",
  "Bend",
  "Bet",
  "Bind",
  "Bleed",
  "Boil",
  "Borrow",
  "Bounce",
  "Bow",
  "Break",
  "Breed",
  "Bring",
  "Broadcast",
  "Build",
  "Burn",
  "Burst",
  "Buy",
  "Calculate",
  "Care",
  "Carry",
  "Catch",
  "Celebrate",
  "Change",
  "Choose",
  "Chop",
  "Claim",
  "Climb",
  "Cling",
  "Come",
  "Commit",
  "Communicate",
  "Compare",
  "Compete",
  "Complain",
  "Complete",
  "Concern",
  "Confirm",
  "Consent",
  "Consider",
  "Consist",
  "Consult",
  "Contain",
  "Continue",
  "Convince",
  "Cook",
  "Count",
  "Crawl",
  "Create",
  "Criticize",
  "Cry",
  "Dance",
  "Dare",
  "Deal",
  "Decide",
  "Defer",
  "Delay",
  "Deliver",
  "Demand",
  "Deny",
  "Depend",
  "Describe",
  "Deserve",
  "Desire",
  "Destroy",
  "Determine",
  "Develop",
  "Die",
  "Differ",
  "Disagree",
  "Discover",
  "Discuss",
  "Dislike",
  "Distribute",
  "Dive",
  "Do",
  "Doubt",
  "Drag",
  "Dream",
  "Drill",
  "Drink",
  "Drive",
  "Drop",
  "Dry",
  "Earn",
  "Eat",
  "Emphasize",
  "Enable",
  "Encourage",
  "Engage",
  "Enhance",
  "Enjoy",
  "Ensure",
  "Entail",
  "Enter",
  "Establish",
  "Examine",
  "Exist",
  "Expand",
  "Expect",
  "Experiment",
  "Explain",
  "Explore",
  "Extend",
  "Fail",
  "Fall",
  "Feed",
  "Feel",
  "Fight",
  "Find",
  "Finish",
  "Fit",
  "Fly",
  "Fold",
  "Follow",
  "Forbid",
  "Forget",
  "Forgive",
  "Freeze",
  "Fry",
  "Generate",
  "Get",
  "Give",
  "Go",
  "Gravitate",
  "Grind",
  "Grow",
  "Guess",
  "Hang",
  "Happen",
  "Hate",
  "Have",
  "Hear",
  "Hesitate",
  "Hide",
  "Hit",
  "Hold",
  "Hop",
  "Hope",
  "Hug",
  "Hurry",
  "Hurt",
  "Identify",
  "Ignore",
  "Illustrate",
  "Imagine",
  "Imply",
  "Impress",
  "Improve",
  "Include",
  "Incorporate",
  "Indicate",
  "Inform",
  "Insist",
  "Install",
  "Intend",
  "Introduce",
  "Invest",
  "Investigate",
  "Involve",
  "Iron",
  "Jog",
  "Jump",
  "Justify",
  "Keep",
  "Kick",
  "Kiss",
  "Kneel",
  "Knit",
  "Know",
  "Lack",
  "Laugh",
  "Lay",
  "Lead",
  "Lean",
  "Leap",
  "Learn",
  "Leave",
  "Lend",
  "Lie",
  "Lift",
  "Light",
  "Like",
  "Listen",
  "Look",
  "Lose",
  "Love",
  "Maintain",
  "Make",
  "Manage",
  "Matter",
  "Mean",
  "Measure",
  "Meet",
  "Melt",
  "Mention",
  "Might",
  "Mind",
  "Miss",
  "Mix",
  "Mow",
  "Need",
  "Neglect",
  "Negotiate",
  "Observe",
  "Obtain",
  "Occur",
  "Offer",
  "Open",
  "Operate",
  "Order",
  "Organize",
  "Overcome",
  "Overtake",
  "Owe",
  "Own",
  "Paint",
  "Participate",
  "Pay",
  "Peel",
  "Perform",
  "Persuade",
  "Pinch",
  "Plan",
  "Play",
  "Point",
  "Possess",
  "Postpone",
  "Pour",
  "Practice",
  "Prefer",
  "Prepare",
  "Pretend",
  "Prevent",
  "Proceed",
  "Promise",
  "Propose",
  "Protect",
  "Prove",
  "Pull",
  "Punch",
  "Pursue",
  "Push",
  "Put",
  "Qualify",
  "Question",
  "Quit",
  "Raze",
  "React",
  "Read",
  "Realize",
  "Reassure",
  "Recall",
  "Receive",
  "Recollect",
  "Recommend",
  "Reduce",
  "Refer",
  "Reflect",
  "Refuse",
  "Regret",
  "Regulate",
  "Regurgitate",
  "Relate",
  "Relax",
  "Relieve",
  "Rely",
  "Remain",
  "Remember",
  "Remind",
  "Repair",
  "Replace",
  "Represent",
  "Require",
  "Resent",
  "Resist",
  "Retain",
  "Retire",
  "Rid",
  "Ride",
  "Ring",
  "Rise",
  "Risk",
  "Roast",
  "Rock",
  "Ruin",
  "Run",
  "Sanction",
  "Satisfy",
  "Say",
  "Screw",
  "Scrub",
  "See",
  "Seem",
  "Sell",
  "Send",
  "Serve",
  "Set",
  "Settle",
  "Sew",
  "Shake",
  "Shed",
  "Shine",
  "Shoot",
  "Show",
  "Shrink",
  "Shut",
  "Sing",
  "Sink",
  "Sit",
  "Ski",
  "Sleep",
  "Slice",
  "Slide",
  "Slip",
  "Smell",
  "Smelt",
  "Snore",
  "Solve",
  "Sow",
  "Speak",
  "Specify",
  "Spell",
  "Spend",
  "Spill",
  "Spread",
  "Squat",
  "Squeeze",
  "Stack",
  "Stand",
  "Start",
  "Steal",
  "Sting",
  "Stink",
  "Stir",
  "Stop",
  "Stretch",
  "Strike",
  "Struggle",
  "Study",
  "Submit",
  "Succeed",
  "Suffer",
  "Suggest",
  "Supply",
  "Suppose",
  "Surprise",
  "Survive",
  "Swear",
  "Sweep",
  "Swim",
  "Swing",
  "Swoon",
  "Take",
  "Talk",
  "Taste",
  "Teach",
  "Tear",
  "Tell",
  "Tend",
  "Think",
  "Threaten",
  "Throw",
  "Tiptoe",
  "Tolerate",
  "Translate",
  "Try",
  "Understand",
  "Vacuum",
  "Value",
  "Vary",
  "Volunteer",
  "Wait",
  "Wake",
  "Walk",
  "Want",
  "Warn",
  "Wash",
  "Watch",
  "Wave",
  "Wear",
  "Weep",
  "Weigh",
  "Will",
  "Win",
  "Wish",
  "Write",
  "Zip",
  "Zoom",
]

const OBSCENE = [
  "Arouse",
  "Asphyxiate",
  "Assassinate",
  "Barf",
  "Beg",
  "Bind",
  "Bite",
  "Blow",
  "Bomb",
  "Bugger",
  "Castrate",
  "Choke",
  "Creep",
  "Cuckold",
  "Cut",
  "Diddle",
  "Distend",
  "Dock",
  "Dominate",
  "Eat-out",
  "Ejaculate",
  "Felch",
  "Finger",
  "Fuck",
  "Gag",
  "Gargle",
  "Gorp",
  "Grunt",
  "Jerk",
  "Jill",
  "Manhandle",
  "Masturbate",
  "Munch",
  "Orgasm",
  "Peg",
  "Penetrate",
  "Pierce",
  "Pinch",
  "Queef",
  "Shag",
  "Shit",
  "Slap",
  "Slurp",
  "Smakglad",
  "Spank",
  "Spit",
  "Squirt",
  "Stick",
  "Strangle",
  "Suck",
  "Suckle",
  "Swallow",
  "Swell",
  "Tickle",
  "Twist",
  "Whip",
  "Yank",
]

const POSITIONS = ['one', 'two', 'three'];

function addWordTo (slogan, naughtyOK) {
  if (naughtyOK) {
    WORDS = VERBS.concat(OBSCENE)
  } else {
    WORDS = VERBS
  }
  slogan.push(WORDS[Math.floor(Math.random() * WORDS.length)]);
  return slogan;
}

function populate (slogan, numberOfWords, naughtyOK) {
  for (let i = 0; i < numberOfWords; i++) {
    addWordTo(slogan, naughtyOK);
  }
  return slogan;
}

function removeDuplicateAndRepopulate (slogan, isNaughty) {
  let uniqueWords = [...new Set(slogan)];
  while (uniqueWords.length < 3) {
    addWordTo(uniqueWords, isNaughty);
  }
  return uniqueWords;
}

function setNewVerbs (slogan, position) {
  position.forEach(function (position, index) {
    let element = document.getElementById(position);
    element.textContent = slogan[index];
  })
}

function liveLaughLove() {
  let slogan = []
  let isNaughty = document.getElementById('naughty').checked
  console.log('isNaughty check state: ', isNaughty)

  slogan = populate(slogan, 3, isNaughty);
  slogan = removeDuplicateAndRepopulate(slogan, isNaughty);
  setNewVerbs(slogan, POSITIONS);
}

document.addEventListener("DOMContentLoaded", function() {
  liveLaughLove();
})();
